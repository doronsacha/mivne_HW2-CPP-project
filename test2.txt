Player player1(70,43);
    Player player2(91,17);
    Player player3(47,61);
    Player player4(63,95);
    Player player5(146,52);
    Player player6(104,129);
    Player player7(77,92);
    Player player8(20,85);
    Player player9(48,7);
    Player player10(144,123);
    Player player11(96,112);
    Player player12(1,37);
    Player player13(70,112);
    Player player14(97,40);
    Player player15(114,5);
    Player player16(35,121);
    Player player17(97,61);
    Player player18(53,7);
    Player player19(146,43);
    Player player20(129,133);
    Player player21(96,127);
    Player player22(142,72);
    Player player23(95,142);
    Player player24(138,80);
    Player player25(82,137);
    Player player26(98,92);
    Player player27(76,29);
    Player player28(102,47);
    Player player29(122,134);
    Player player30(39,63);
    Player player31(67,95);
    Player player32(103,32);
    Player player33(71,103);
    Player player34(130,45);
    Player player35(100,109);
    Player player36(40,85);
    Player player37(44,32);
    Player player38(64,6);
    Player player39(8,27);
    Player player40(14,27);
    Player player41(103,70);
    Player player42(25,128);
    Player player43(104,47);
    Player player44(142,63);
    Player player45(128,146);
    Player player46(117,26);
    Player player47(118,58);
    Player player48(28,58);
    Player player49(62,61);
    Player player50(69,74);
    Player player51(107,93);
    Player player52(140,16);
    Player player53(129,98);
    Player player54(41,60);
    Player player55(147,101);
    Player player56(98,48);
    Player player57(47,55);
    Player player58(132,48);
    Player player59(15,19);
    Player player60(79,105);
    Player player61(20,55);
    Player player62(62,19);
    Player player63(133,62);
    Player player64(145,22);
    Player player65(119,137);
    Player player66(33,27);
    Player player67(128,84);
    Player player68(134,96);
    Player player69(10,76);
    Player player70(124,14);
    Player player71(132,64);
    Player player72(41,48);
    Player player73(90,140);
    Player player74(77,44);
    Player player75(42,7);
    Player player76(77,87);
    Player player77(27,46);
    Player player78(94,106);
    Player player79(108,99);
    Player player80(11,16);
    Player player81(53,120);
    Player player82(64,105);
    Player player83(100,101);
    Player player84(69,149);
    Player player85(73,29);
    Player player86(50,111);
    Player player87(95,42);
    Player player88(142,45);
    Player player89(116,60);
    Player player90(102,132);
    Player player91(124,32);
    Player player92(5,132);
    Player player93(56,85);
    Player player94(47,80);
    Player player95(18,30);
    Player player96(10,90);
    Player player97(112,27);
    Player player98(142,125);
    Player player99(61,62);
    Player player100(90,107);
    Player player101(141,130);
    Player player102(53,118);
    Player player103(65,89);
    Player player104(86,38);
    Player player105(80,89);
    Player player106(134,113);
    Player player107(56,125);
    Player player108(58,105);
    Player player109(109,6);
    Player player110(62,90);
    Player player111(13,127);
    Player player112(117,74);
    Player player113(14,74);
    Player player114(13,143);
    Player player115(15,59);
    Player player116(100,62);
    Player player117(27,133);
    Player player118(101,144);
    Player player119(26,102);
    Player player120(70,80);
    Player player121(23,107);
    Player player122(10,13);
    Player player123(3,137);
    Player player124(19,52);
    Player player125(17,39);
    Player player126(88,117);
    Player player127(9,99);
    Player player128(105,32);
    Player player129(73,137);
    Player player130(94,40);
    Player player131(25,73);
    Player player132(99,60);
    Player player133(9,110);
    Player player134(45,51);
    Player player135(35,80);
    Player player136(72,76);
    Player player137(23,22);
    Player player138(115,11);
    Player player139(83,47);
    Player player140(66,127);
    Player player141(148,110);
    Player player142(109,66);
    Player player143(82,97);
    Player player144(123,81);
    Player player145(104,137);
    Player player146(42,90);
    Player player147(144,119);
    Player player148(30,27);
    Player player149(150,148);
    Player player150(75,107);
    Player player151(17,62);
    Player player152(110,32);
    Player player153(15,38);
    Player player154(134,114);
    Player player155(102,144);
    Player player156(85,60);
    Player player157(94,133);
    Player player158(57,52);
    Player player159(113,94);
    Player player160(45,141);
    Player player161(108,54);
    Player player162(15,80);
    Player player163(22,124);
    Player player164(69,47);
    Player player165(107,10);
    Player player166(82,112);
    Player player167(27,41);
    Player player168(44,137);
    Player player169(102,83);
    Player player170(83,122);
    Player player171(10,74);
    Player player172(112,127);
    Player player173(12,120);
    Player player174(23,47);
    Player player175(124,147);
    Player player176(51,18);
    Player player177(27,86);
    Player player178(1,130);
    Player player179(121,108);
    Player player180(48,30);
    Player player181(96,88);
    Player player182(1,38);
    Player player183(116,2);
    Player player184(72,15);
    Player player185(15,65);
    Player player186(23,116);
    Player player187(121,94);
    Player player188(95,80);
    Player player189(93,104);
    Player player190(101,16);
    Player player191(124,118);
    Player player192(98,122);
    Player player193(104,50);
    Player player194(28,77);
    Player player195(14,76);
    Player player196(5,57);
    Player player197(120,76);
    Player player198(49,47);
    Player player199(142,53);
    Player player200(14,109);
    Player player201(143,137);
    Player player202(17,36);
    Player player203(111,35);
    Player player204(4,35);
    Player player205(69,20);
    Player player206(32,25);
    Player player207(98,85);
    Player player208(36,43);
    Player player209(46,27);
    Player player210(109,9);
    Player player211(147,103);
    Player player212(94,55);
    Player player213(4,64);
    Player player214(51,79);
    Player player215(36,110);
    Player player216(20,127);
    Player player217(91,56);
    Player player218(22,147);
    Player player219(100,125);
    Player player220(57,114);
    Player player221(25,60);
    Player player222(90,145);
    Player player223(46,13);
    Player player224(134,9);
    Player player225(146,40);
    Player player226(113,59);
    Player player227(105,98);
    Player player228(125,123);
    Player player229(103,50);
    Player player230(18,141);
    Player player231(82,25);
    Player player232(70,95);
    Player player233(41,89);
    Player player234(150,75);
    Player player235(79,93);
    Player player236(145,89);
    Player player237(146,28);
    Player player238(78,31);
    Player player239(47,2);
    Player player240(65,133);
    Player player241(79,125);
    Player player242(134,146);
    Player player243(44,88);
    Player player244(70,3);
    Player player245(46,80);
    Player player246(132,42);
    Player player247(40,55);
    Player player248(74,36);
    Player player249(21,85);
    Player player250(73,138);
    Player player251(3,149);
    Player player252(129,67);
    Player player253(50,66);
    Player player254(89,41);
    Player player255(64,4);
    Player player256(40,46);
    Player player257(76,121);
    Player player258(55,33);
    Player player259(117,136);
    Player player260(84,117);
    Player player261(62,113);
    Player player262(34,72);
    Player player263(31,93);
    Player player264(77,15);
    Player player265(122,96);
    Player player266(39,50);
    Player player267(6,81);
    Player player268(19,136);
    Player player269(1,87);
    Player player270(61,23);
    Player player271(114,15);
    Player player272(149,98);
    Player player273(92,131);
    Player player274(147,25);
    Player player275(111,54);
    Player player276(105,13);
    Player player277(114,72);
    Player player278(100,60);
    Player player279(113,63);
    Player player280(10,127);
    Player player281(71,74);
    Player player282(96,31);
    Player player283(31,140);
    Player player284(8,17);
    Player player285(81,138);
    Player player286(122,131);
    Player player287(79,34);
    Player player288(2,62);
    Player player289(137,87);
    Player player290(19,139);
    Player player291(65,47);
    Player player292(17,109);
    Player player293(72,40);
    Player player294(8,26);
    Player player295(68,31);
    Player player296(100,86);
    Player player297(109,100);
    Player player298(48,101);
    Player player299(33,137);
    Player player300(67,30);


    assert(table.insert(player1.getID(), &player1)==SUCCESS);
    assert(table.insert(player2.getID(), &player2)==SUCCESS);
    assert(table.insert(player3.getID(), &player3)==SUCCESS);
    assert(table.insert(player4.getID(), &player4)==SUCCESS);
    assert(table.insert(player5.getID(), &player5)==SUCCESS);
    assert(table.insert(player6.getID(), &player6)==SUCCESS);
    assert(table.insert(player7.getID(), &player7)==SUCCESS);
    assert(table.insert(player8.getID(), &player8)==SUCCESS);
    assert(table.insert(player9.getID(), &player9)==SUCCESS);
    assert(table.insert(player10.getID(), &player10)==SUCCESS);
    assert(table.insert(player11.getID(), &player11)==SUCCESS);
    assert(table.insert(player12.getID(), &player12)==SUCCESS);
    assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
    assert(table.insert(player14.getID(), &player14)==SUCCESS);
    assert(table.insert(player15.getID(), &player15)==SUCCESS);
    assert(table.insert(player16.getID(), &player16)==SUCCESS);
    assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
    assert(table.insert(player18.getID(), &player18)==SUCCESS);
    assert(table.insert(player19.getID(), &player19)==ALREADY_EXIST);
    assert(table.insert(player20.getID(), &player20)==SUCCESS);
    assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
    assert(table.insert(player22.getID(), &player22)==SUCCESS);
    assert(table.insert(player23.getID(), &player23)==SUCCESS);
    assert(table.insert(player24.getID(), &player24)==SUCCESS);
    assert(table.insert(player25.getID(), &player25)==SUCCESS);
    assert(table.insert(player26.getID(), &player26)==SUCCESS);
    assert(table.insert(player27.getID(), &player27)==SUCCESS);
    assert(table.insert(player28.getID(), &player28)==SUCCESS);
    assert(table.insert(player29.getID(), &player29)==SUCCESS);
    assert(table.insert(player30.getID(), &player30)==SUCCESS);
    assert(table.insert(player31.getID(), &player31)==SUCCESS);
    assert(table.insert(player32.getID(), &player32)==SUCCESS);
    assert(table.insert(player33.getID(), &player33)==SUCCESS);
    assert(table.insert(player34.getID(), &player34)==SUCCESS);
    assert(table.insert(player35.getID(), &player35)==SUCCESS);
    assert(table.insert(player36.getID(), &player36)==SUCCESS);
    assert(table.insert(player37.getID(), &player37)==SUCCESS);
    assert(table.insert(player38.getID(), &player38)==SUCCESS);
    assert(table.insert(player39.getID(), &player39)==SUCCESS);
    assert(table.insert(player40.getID(), &player40)==SUCCESS);
    assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
    assert(table.insert(player42.getID(), &player42)==SUCCESS);
    assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
    assert(table.insert(player44.getID(), &player44)==ALREADY_EXIST);
    assert(table.insert(player45.getID(), &player45)==SUCCESS);
    assert(table.insert(player46.getID(), &player46)==SUCCESS);
    assert(table.insert(player47.getID(), &player47)==SUCCESS);
    assert(table.insert(player48.getID(), &player48)==SUCCESS);
    assert(table.insert(player49.getID(), &player49)==SUCCESS);
    assert(table.insert(player50.getID(), &player50)==SUCCESS);
    assert(table.insert(player51.getID(), &player51)==SUCCESS);
    assert(table.insert(player52.getID(), &player52)==SUCCESS);
    assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
    assert(table.insert(player54.getID(), &player54)==SUCCESS);
    assert(table.insert(player55.getID(), &player55)==SUCCESS);
    assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
    assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
    assert(table.insert(player58.getID(), &player58)==SUCCESS);
    assert(table.insert(player59.getID(), &player59)==SUCCESS);
    assert(table.insert(player60.getID(), &player60)==SUCCESS);
    assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
    assert(table.insert(player62.getID(), &player62)==ALREADY_EXIST);
    assert(table.insert(player63.getID(), &player63)==SUCCESS);
    assert(table.insert(player64.getID(), &player64)==SUCCESS);
    assert(table.insert(player65.getID(), &player65)==SUCCESS);
    assert(table.insert(player66.getID(), &player66)==SUCCESS);
    assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
    assert(table.insert(player68.getID(), &player68)==SUCCESS);
    assert(table.insert(player69.getID(), &player69)==SUCCESS);
    assert(table.insert(player70.getID(), &player70)==SUCCESS);
    assert(table.insert(player71.getID(), &player71)==ALREADY_EXIST);
    assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
    assert(table.insert(player73.getID(), &player73)==SUCCESS);
    assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
    assert(table.insert(player75.getID(), &player75)==SUCCESS);
    assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
    assert(table.insert(player77.getID(), &player77)==SUCCESS);
    assert(table.insert(player78.getID(), &player78)==SUCCESS);
    assert(table.insert(player79.getID(), &player79)==SUCCESS);
    assert(table.insert(player80.getID(), &player80)==SUCCESS);
    assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
    assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
    assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
    assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
    assert(table.insert(player85.getID(), &player85)==SUCCESS);
    assert(table.insert(player86.getID(), &player86)==SUCCESS);
    assert(table.insert(player87.getID(), &player87)==ALREADY_EXIST);
    assert(table.insert(player88.getID(), &player88)==ALREADY_EXIST);
    assert(table.insert(player89.getID(), &player89)==SUCCESS);
    assert(table.insert(player90.getID(), &player90)==ALREADY_EXIST);
    assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
    assert(table.insert(player92.getID(), &player92)==SUCCESS);
    assert(table.insert(player93.getID(), &player93)==SUCCESS);
    assert(table.insert(player94.getID(), &player94)==ALREADY_EXIST);
    assert(table.insert(player95.getID(), &player95)==SUCCESS);
    assert(table.insert(player96.getID(), &player96)==ALREADY_EXIST);
    assert(table.insert(player97.getID(), &player97)==SUCCESS);
    assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
    assert(table.insert(player99.getID(), &player99)==SUCCESS);
    assert(table.insert(player100.getID(), &player100)==ALREADY_EXIST);
    assert(table.insert(player101.getID(), &player101)==SUCCESS);
    assert(table.insert(player102.getID(), &player102)==ALREADY_EXIST);
    assert(table.insert(player103.getID(), &player103)==SUCCESS);
    assert(table.insert(player104.getID(), &player104)==SUCCESS);
    assert(table.insert(player105.getID(), &player105)==SUCCESS);
    assert(table.insert(player106.getID(), &player106)==ALREADY_EXIST);
    assert(table.insert(player107.getID(), &player107)==ALREADY_EXIST);
    assert(table.insert(player108.getID(), &player108)==SUCCESS);
    assert(table.insert(player109.getID(), &player109)==SUCCESS);
    assert(table.insert(player110.getID(), &player110)==ALREADY_EXIST);
    assert(table.insert(player111.getID(), &player111)==SUCCESS);
    assert(table.insert(player112.getID(), &player112)==ALREADY_EXIST);
    assert(table.insert(player113.getID(), &player113)==ALREADY_EXIST);
    assert(table.insert(player114.getID(), &player114)==ALREADY_EXIST);
    assert(table.insert(player115.getID(), &player115)==ALREADY_EXIST);
    assert(table.insert(player116.getID(), &player116)==ALREADY_EXIST);
    assert(table.insert(player117.getID(), &player117)==ALREADY_EXIST);
    assert(table.insert(player118.getID(), &player118)==SUCCESS);
    assert(table.insert(player119.getID(), &player119)==SUCCESS);
    assert(table.insert(player120.getID(), &player120)==ALREADY_EXIST);
    assert(table.insert(player121.getID(), &player121)==SUCCESS);
    assert(table.insert(player122.getID(), &player122)==ALREADY_EXIST);
    assert(table.insert(player123.getID(), &player123)==SUCCESS);
    assert(table.insert(player124.getID(), &player124)==SUCCESS);
    assert(table.insert(player125.getID(), &player125)==SUCCESS);
    assert(table.insert(player126.getID(), &player126)==SUCCESS);
    assert(table.insert(player127.getID(), &player127)==SUCCESS);
    assert(table.insert(player128.getID(), &player128)==SUCCESS);
    assert(table.insert(player129.getID(), &player129)==ALREADY_EXIST);
    assert(table.insert(player130.getID(), &player130)==ALREADY_EXIST);
    assert(table.insert(player131.getID(), &player131)==ALREADY_EXIST);
    assert(table.insert(player132.getID(), &player132)==SUCCESS);
    assert(table.insert(player133.getID(), &player133)==ALREADY_EXIST);
    assert(table.insert(player134.getID(), &player134)==SUCCESS);
    assert(table.insert(player135.getID(), &player135)==ALREADY_EXIST);
    assert(table.insert(player136.getID(), &player136)==SUCCESS);
    assert(table.insert(player137.getID(), &player137)==ALREADY_EXIST);
    assert(table.insert(player138.getID(), &player138)==SUCCESS);
    assert(table.insert(player139.getID(), &player139)==SUCCESS);
    assert(table.insert(player140.getID(), &player140)==SUCCESS);
    assert(table.insert(player141.getID(), &player141)==SUCCESS);
    assert(table.insert(player142.getID(), &player142)==ALREADY_EXIST);
    assert(table.insert(player143.getID(), &player143)==ALREADY_EXIST);
    assert(table.insert(player144.getID(), &player144)==SUCCESS);
    assert(table.insert(player145.getID(), &player145)==ALREADY_EXIST);
    assert(table.insert(player146.getID(), &player146)==ALREADY_EXIST);
    assert(table.insert(player147.getID(), &player147)==ALREADY_EXIST);
    assert(table.insert(player148.getID(), &player148)==SUCCESS);
    assert(table.insert(player149.getID(), &player149)==SUCCESS);
    assert(table.insert(player150.getID(), &player150)==SUCCESS);
    assert(table.insert(player151.getID(), &player151)==ALREADY_EXIST);
    assert(table.insert(player152.getID(), &player152)==SUCCESS);
    assert(table.insert(player153.getID(), &player153)==ALREADY_EXIST);
    assert(table.insert(player154.getID(), &player154)==ALREADY_EXIST);
    assert(table.insert(player155.getID(), &player155)==ALREADY_EXIST);
    assert(table.insert(player156.getID(), &player156)==SUCCESS);
    assert(table.insert(player157.getID(), &player157)==ALREADY_EXIST);
    assert(table.insert(player158.getID(), &player158)==SUCCESS);
    assert(table.insert(player159.getID(), &player159)==SUCCESS);
    assert(table.insert(player160.getID(), &player160)==ALREADY_EXIST);
    assert(table.insert(player161.getID(), &player161)==ALREADY_EXIST);
    assert(table.insert(player162.getID(), &player162)==ALREADY_EXIST);
    assert(table.insert(player163.getID(), &player163)==SUCCESS);
    assert(table.insert(player164.getID(), &player164)==ALREADY_EXIST);
    assert(table.insert(player165.getID(), &player165)==ALREADY_EXIST);
    assert(table.insert(player166.getID(), &player166)==ALREADY_EXIST);
    assert(table.insert(player167.getID(), &player167)==ALREADY_EXIST);
    assert(table.insert(player168.getID(), &player168)==ALREADY_EXIST);
    assert(table.insert(player169.getID(), &player169)==ALREADY_EXIST);
    assert(table.insert(player170.getID(), &player170)==ALREADY_EXIST);
    assert(table.insert(player171.getID(), &player171)==ALREADY_EXIST);
    assert(table.insert(player172.getID(), &player172)==ALREADY_EXIST);
    assert(table.insert(player173.getID(), &player173)==SUCCESS);
    assert(table.insert(player174.getID(), &player174)==ALREADY_EXIST);
    assert(table.insert(player175.getID(), &player175)==ALREADY_EXIST);
    assert(table.insert(player176.getID(), &player176)==SUCCESS);
    assert(table.insert(player177.getID(), &player177)==ALREADY_EXIST);
    assert(table.insert(player178.getID(), &player178)==ALREADY_EXIST);
    assert(table.insert(player179.getID(), &player179)==SUCCESS);
    assert(table.insert(player180.getID(), &player180)==ALREADY_EXIST);
    assert(table.insert(player181.getID(), &player181)==ALREADY_EXIST);
    assert(table.insert(player182.getID(), &player182)==ALREADY_EXIST);
    assert(table.insert(player183.getID(), &player183)==ALREADY_EXIST);
    assert(table.insert(player184.getID(), &player184)==ALREADY_EXIST);
    assert(table.insert(player185.getID(), &player185)==ALREADY_EXIST);
    assert(table.insert(player186.getID(), &player186)==ALREADY_EXIST);
    assert(table.insert(player187.getID(), &player187)==ALREADY_EXIST);
    assert(table.insert(player188.getID(), &player188)==ALREADY_EXIST);
    assert(table.insert(player189.getID(), &player189)==SUCCESS);
    assert(table.insert(player190.getID(), &player190)==ALREADY_EXIST);
    assert(table.insert(player191.getID(), &player191)==ALREADY_EXIST);
    assert(table.insert(player192.getID(), &player192)==ALREADY_EXIST);
    assert(table.insert(player193.getID(), &player193)==ALREADY_EXIST);
    assert(table.insert(player194.getID(), &player194)==ALREADY_EXIST);
    assert(table.insert(player195.getID(), &player195)==ALREADY_EXIST);
    assert(table.insert(player196.getID(), &player196)==ALREADY_EXIST);
    assert(table.insert(player197.getID(), &player197)==SUCCESS);
    assert(table.insert(player198.getID(), &player198)==SUCCESS);
    assert(table.insert(player199.getID(), &player199)==ALREADY_EXIST);
    assert(table.insert(player200.getID(), &player200)==ALREADY_EXIST);
    assert(table.insert(player201.getID(), &player201)==SUCCESS);
    assert(table.insert(player202.getID(), &player202)==ALREADY_EXIST);
    assert(table.insert(player203.getID(), &player203)==SUCCESS);
    assert(table.insert(player204.getID(), &player204)==SUCCESS);
    assert(table.insert(player205.getID(), &player205)==ALREADY_EXIST);
    assert(table.insert(player206.getID(), &player206)==SUCCESS);
    assert(table.insert(player207.getID(), &player207)==ALREADY_EXIST);
    assert(table.insert(player208.getID(), &player208)==SUCCESS);
    assert(table.insert(player209.getID(), &player209)==SUCCESS);
    assert(table.insert(player210.getID(), &player210)==ALREADY_EXIST);
    assert(table.insert(player211.getID(), &player211)==ALREADY_EXIST);
    assert(table.insert(player212.getID(), &player212)==ALREADY_EXIST);
    assert(table.insert(player213.getID(), &player213)==ALREADY_EXIST);
    assert(table.insert(player214.getID(), &player214)==ALREADY_EXIST);
    assert(table.insert(player215.getID(), &player215)==ALREADY_EXIST);
    assert(table.insert(player216.getID(), &player216)==ALREADY_EXIST);
    assert(table.insert(player217.getID(), &player217)==ALREADY_EXIST);
    assert(table.insert(player218.getID(), &player218)==ALREADY_EXIST);
    assert(table.insert(player219.getID(), &player219)==ALREADY_EXIST);
    assert(table.insert(player220.getID(), &player220)==ALREADY_EXIST);
    assert(table.insert(player221.getID(), &player221)==ALREADY_EXIST);
    assert(table.insert(player222.getID(), &player222)==ALREADY_EXIST);
    assert(table.insert(player223.getID(), &player223)==ALREADY_EXIST);
    assert(table.insert(player224.getID(), &player224)==ALREADY_EXIST);
    assert(table.insert(player225.getID(), &player225)==ALREADY_EXIST);
    assert(table.insert(player226.getID(), &player226)==ALREADY_EXIST);
    assert(table.insert(player227.getID(), &player227)==ALREADY_EXIST);
    assert(table.insert(player228.getID(), &player228)==SUCCESS);
    assert(table.insert(player229.getID(), &player229)==ALREADY_EXIST);
    assert(table.insert(player230.getID(), &player230)==ALREADY_EXIST);
    assert(table.insert(player231.getID(), &player231)==ALREADY_EXIST);
    assert(table.insert(player232.getID(), &player232)==ALREADY_EXIST);
    assert(table.insert(player233.getID(), &player233)==ALREADY_EXIST);
    assert(table.insert(player234.getID(), &player234)==ALREADY_EXIST);
    assert(table.insert(player235.getID(), &player235)==ALREADY_EXIST);
    assert(table.insert(player236.getID(), &player236)==ALREADY_EXIST);
    assert(table.insert(player237.getID(), &player237)==ALREADY_EXIST);
    assert(table.insert(player238.getID(), &player238)==SUCCESS);
    assert(table.insert(player239.getID(), &player239)==ALREADY_EXIST);
    assert(table.insert(player240.getID(), &player240)==ALREADY_EXIST);
    assert(table.insert(player241.getID(), &player241)==ALREADY_EXIST);
    assert(table.insert(player242.getID(), &player242)==ALREADY_EXIST);
    assert(table.insert(player243.getID(), &player243)==ALREADY_EXIST);
    assert(table.insert(player244.getID(), &player244)==ALREADY_EXIST);
    assert(table.insert(player245.getID(), &player245)==ALREADY_EXIST);
    assert(table.insert(player246.getID(), &player246)==ALREADY_EXIST);
    assert(table.insert(player247.getID(), &player247)==ALREADY_EXIST);
    assert(table.insert(player248.getID(), &player248)==SUCCESS);
    assert(table.insert(player249.getID(), &player249)==SUCCESS);
    assert(table.insert(player250.getID(), &player250)==ALREADY_EXIST);
    assert(table.insert(player251.getID(), &player251)==ALREADY_EXIST);
    assert(table.insert(player252.getID(), &player252)==ALREADY_EXIST);
    assert(table.insert(player253.getID(), &player253)==ALREADY_EXIST);
    assert(table.insert(player254.getID(), &player254)==SUCCESS);
    assert(table.insert(player255.getID(), &player255)==ALREADY_EXIST);
    assert(table.insert(player256.getID(), &player256)==ALREADY_EXIST);
    assert(table.insert(player257.getID(), &player257)==ALREADY_EXIST);
    assert(table.insert(player258.getID(), &player258)==SUCCESS);
    assert(table.insert(player259.getID(), &player259)==ALREADY_EXIST);
    assert(table.insert(player260.getID(), &player260)==SUCCESS);
    assert(table.insert(player261.getID(), &player261)==ALREADY_EXIST);
    assert(table.insert(player262.getID(), &player262)==SUCCESS);
    assert(table.insert(player263.getID(), &player263)==SUCCESS);
    assert(table.insert(player264.getID(), &player264)==ALREADY_EXIST);
    assert(table.insert(player265.getID(), &player265)==ALREADY_EXIST);
    assert(table.insert(player266.getID(), &player266)==ALREADY_EXIST);
    assert(table.insert(player267.getID(), &player267)==SUCCESS);
    assert(table.insert(player268.getID(), &player268)==ALREADY_EXIST);
    assert(table.insert(player269.getID(), &player269)==ALREADY_EXIST);
    assert(table.insert(player270.getID(), &player270)==ALREADY_EXIST);
    assert(table.insert(player271.getID(), &player271)==ALREADY_EXIST);
    assert(table.insert(player272.getID(), &player272)==SUCCESS);
    assert(table.insert(player273.getID(), &player273)==SUCCESS);
    assert(table.insert(player274.getID(), &player274)==ALREADY_EXIST);
    assert(table.insert(player275.getID(), &player275)==ALREADY_EXIST);
    assert(table.insert(player276.getID(), &player276)==ALREADY_EXIST);
    assert(table.insert(player277.getID(), &player277)==ALREADY_EXIST);
    assert(table.insert(player278.getID(), &player278)==ALREADY_EXIST);
    assert(table.insert(player279.getID(), &player279)==ALREADY_EXIST);
    assert(table.insert(player280.getID(), &player280)==ALREADY_EXIST);
    assert(table.insert(player281.getID(), &player281)==ALREADY_EXIST);
    assert(table.insert(player282.getID(), &player282)==ALREADY_EXIST);
    assert(table.insert(player283.getID(), &player283)==ALREADY_EXIST);
    assert(table.insert(player284.getID(), &player284)==ALREADY_EXIST);
    assert(table.insert(player285.getID(), &player285)==SUCCESS);
    assert(table.insert(player286.getID(), &player286)==ALREADY_EXIST);
    assert(table.insert(player287.getID(), &player287)==ALREADY_EXIST);
    assert(table.insert(player288.getID(), &player288)==SUCCESS);
    assert(table.insert(player289.getID(), &player289)==SUCCESS);
    assert(table.insert(player290.getID(), &player290)==ALREADY_EXIST);
    assert(table.insert(player291.getID(), &player291)==ALREADY_EXIST);
    assert(table.insert(player292.getID(), &player292)==ALREADY_EXIST);
    assert(table.insert(player293.getID(), &player293)==ALREADY_EXIST);
    assert(table.insert(player294.getID(), &player294)==ALREADY_EXIST);
    assert(table.insert(player295.getID(), &player295)==SUCCESS);
    assert(table.insert(player296.getID(), &player296)==ALREADY_EXIST);
    assert(table.insert(player297.getID(), &player297)==ALREADY_EXIST);
    assert(table.insert(player298.getID(), &player298)==ALREADY_EXIST);
    assert(table.insert(player299.getID(), &player299)==ALREADY_EXIST);
    assert(table.insert(player300.getID(), &player300)==ALREADY_EXIST);

    assert(table.remove(player1.getID())==SUCCESS);
    assert(table.remove(player2.getID())==SUCCESS);
    assert(table.remove(player3.getID())==SUCCESS);
    assert(table.remove(player4.getID())==SUCCESS);
    assert(table.remove(player5.getID())==SUCCESS);
    assert(table.remove(player6.getID())==SUCCESS);
    assert(table.remove(player7.getID())==SUCCESS);
    assert(table.remove(player8.getID())==SUCCESS);
    assert(table.remove(player9.getID())==SUCCESS);
    assert(table.remove(player10.getID())==SUCCESS);
    assert(table.remove(player11.getID())==SUCCESS);
    assert(table.remove(player12.getID())==SUCCESS);
    assert(table.remove(player13.getID())==NOT_FOUND);
    assert(table.remove(player14.getID())==SUCCESS);
    assert(table.remove(player15.getID())==SUCCESS);
    assert(table.remove(player16.getID())==SUCCESS);
    assert(table.remove(player17.getID())==NOT_FOUND);
    assert(table.remove(player18.getID())==SUCCESS);
    assert(table.remove(player19.getID())==NOT_FOUND);
    assert(table.remove(player20.getID())==SUCCESS);
    assert(table.remove(player21.getID())==NOT_FOUND);
    assert(table.remove(player22.getID())==SUCCESS);
    assert(table.remove(player23.getID())==SUCCESS);
    assert(table.remove(player24.getID())==SUCCESS);
    assert(table.remove(player25.getID())==SUCCESS);
    assert(table.remove(player26.getID())==SUCCESS);
    assert(table.remove(player27.getID())==SUCCESS);
    assert(table.remove(player28.getID())==SUCCESS);
    assert(table.remove(player29.getID())==SUCCESS);
    assert(table.remove(player30.getID())==SUCCESS);
    assert(table.remove(player31.getID())==SUCCESS);
    assert(table.remove(player32.getID())==SUCCESS);
    assert(table.remove(player33.getID())==SUCCESS);
    assert(table.remove(player34.getID())==SUCCESS);
    assert(table.remove(player35.getID())==SUCCESS);
    assert(table.remove(player36.getID())==SUCCESS);
    assert(table.remove(player37.getID())==SUCCESS);
    assert(table.remove(player38.getID())==SUCCESS);
    assert(table.remove(player39.getID())==SUCCESS);
    assert(table.remove(player40.getID())==SUCCESS);
    assert(table.remove(player41.getID())==NOT_FOUND);
    assert(table.remove(player42.getID())==SUCCESS);
    assert(table.remove(player43.getID())==NOT_FOUND);
    assert(table.remove(player44.getID())==NOT_FOUND);
    assert(table.remove(player45.getID())==SUCCESS);
    assert(table.remove(player46.getID())==SUCCESS);
    assert(table.remove(player47.getID())==SUCCESS);
    assert(table.remove(player48.getID())==SUCCESS);
    assert(table.remove(player49.getID())==SUCCESS);
    assert(table.remove(player50.getID())==SUCCESS);
    assert(table.remove(player51.getID())==SUCCESS);
    assert(table.remove(player52.getID())==SUCCESS);
    assert(table.remove(player53.getID())==NOT_FOUND);
    assert(table.remove(player54.getID())==SUCCESS);
    assert(table.remove(player55.getID())==SUCCESS);
    assert(table.remove(player56.getID())==NOT_FOUND);
    assert(table.remove(player57.getID())==NOT_FOUND);
    assert(table.remove(player58.getID())==SUCCESS);
    assert(table.remove(player59.getID())==SUCCESS);
    assert(table.remove(player60.getID())==SUCCESS);
    assert(table.remove(player61.getID())==NOT_FOUND);
    assert(table.remove(player62.getID())==NOT_FOUND);
    assert(table.remove(player63.getID())==SUCCESS);
    assert(table.remove(player64.getID())==SUCCESS);
    assert(table.remove(player65.getID())==SUCCESS);
    assert(table.remove(player66.getID())==SUCCESS);
    assert(table.remove(player67.getID())==NOT_FOUND);
    assert(table.remove(player68.getID())==SUCCESS);
    assert(table.remove(player69.getID())==SUCCESS);
    assert(table.remove(player70.getID())==SUCCESS);
    assert(table.remove(player71.getID())==NOT_FOUND);
    assert(table.remove(player72.getID())==NOT_FOUND);
    assert(table.remove(player73.getID())==SUCCESS);
    assert(table.remove(player74.getID())==NOT_FOUND);
    assert(table.remove(player75.getID())==SUCCESS);
    assert(table.remove(player76.getID())==NOT_FOUND);
    assert(table.remove(player77.getID())==SUCCESS);
    assert(table.remove(player78.getID())==SUCCESS);
    assert(table.remove(player79.getID())==SUCCESS);
    assert(table.remove(player80.getID())==SUCCESS);
    assert(table.remove(player81.getID())==NOT_FOUND);
    assert(table.remove(player82.getID())==NOT_FOUND);
    assert(table.remove(player83.getID())==NOT_FOUND);
    assert(table.remove(player84.getID())==NOT_FOUND);
    assert(table.remove(player85.getID())==SUCCESS);
    assert(table.remove(player86.getID())==SUCCESS);
    assert(table.remove(player87.getID())==NOT_FOUND);
    assert(table.remove(player88.getID())==NOT_FOUND);
    assert(table.remove(player89.getID())==SUCCESS);
    assert(table.remove(player90.getID())==NOT_FOUND);
    assert(table.remove(player91.getID())==NOT_FOUND);
    assert(table.remove(player92.getID())==SUCCESS);
    assert(table.remove(player93.getID())==SUCCESS);
    assert(table.remove(player94.getID())==NOT_FOUND);
    assert(table.remove(player95.getID())==SUCCESS);
    assert(table.remove(player96.getID())==NOT_FOUND);
    assert(table.remove(player97.getID())==SUCCESS);
    assert(table.remove(player98.getID())==NOT_FOUND);
    assert(table.remove(player99.getID())==SUCCESS);
    assert(table.remove(player100.getID())==NOT_FOUND);
    assert(table.remove(player101.getID())==SUCCESS);
    assert(table.remove(player102.getID())==NOT_FOUND);
    assert(table.remove(player103.getID())==SUCCESS);
    assert(table.remove(player104.getID())==SUCCESS);
    assert(table.remove(player105.getID())==SUCCESS);
    assert(table.remove(player106.getID())==NOT_FOUND);
    assert(table.remove(player107.getID())==NOT_FOUND);
    assert(table.remove(player108.getID())==SUCCESS);
    assert(table.remove(player109.getID())==SUCCESS);
    assert(table.remove(player110.getID())==NOT_FOUND);
    assert(table.remove(player111.getID())==SUCCESS);
    assert(table.remove(player112.getID())==NOT_FOUND);
    assert(table.remove(player113.getID())==NOT_FOUND);
    assert(table.remove(player114.getID())==NOT_FOUND);
    assert(table.remove(player115.getID())==NOT_FOUND);
    assert(table.remove(player116.getID())==NOT_FOUND);
    assert(table.remove(player117.getID())==NOT_FOUND);
    assert(table.remove(player118.getID())==SUCCESS);
    assert(table.remove(player119.getID())==SUCCESS);
    assert(table.remove(player120.getID())==NOT_FOUND);
    assert(table.remove(player121.getID())==SUCCESS);
    assert(table.remove(player122.getID())==NOT_FOUND);
    assert(table.remove(player123.getID())==SUCCESS);
    assert(table.remove(player124.getID())==SUCCESS);
    assert(table.remove(player125.getID())==SUCCESS);
    assert(table.remove(player126.getID())==SUCCESS);
    assert(table.remove(player127.getID())==SUCCESS);
    assert(table.remove(player128.getID())==SUCCESS);
    assert(table.remove(player129.getID())==NOT_FOUND);
    assert(table.remove(player130.getID())==NOT_FOUND);
    assert(table.remove(player131.getID())==NOT_FOUND);
    assert(table.remove(player132.getID())==SUCCESS);
    assert(table.remove(player133.getID())==NOT_FOUND);
    assert(table.remove(player134.getID())==SUCCESS);
    assert(table.remove(player135.getID())==NOT_FOUND);
    assert(table.remove(player136.getID())==SUCCESS);
    assert(table.remove(player137.getID())==NOT_FOUND);
    assert(table.remove(player138.getID())==SUCCESS);
    assert(table.remove(player139.getID())==SUCCESS);
    assert(table.remove(player140.getID())==SUCCESS);
    assert(table.remove(player141.getID())==SUCCESS);
    assert(table.remove(player142.getID())==NOT_FOUND);
    assert(table.remove(player143.getID())==NOT_FOUND);
    assert(table.remove(player144.getID())==SUCCESS);
    assert(table.remove(player145.getID())==NOT_FOUND);
    assert(table.remove(player146.getID())==NOT_FOUND);
    assert(table.remove(player147.getID())==NOT_FOUND);
    assert(table.remove(player148.getID())==SUCCESS);
    assert(table.remove(player149.getID())==SUCCESS);
    assert(table.remove(player150.getID())==SUCCESS);
    assert(table.remove(player151.getID())==NOT_FOUND);
    assert(table.remove(player152.getID())==SUCCESS);
    assert(table.remove(player153.getID())==NOT_FOUND);
    assert(table.remove(player154.getID())==NOT_FOUND);
    assert(table.remove(player155.getID())==NOT_FOUND);
    assert(table.remove(player156.getID())==SUCCESS);
    assert(table.remove(player157.getID())==NOT_FOUND);
    assert(table.remove(player158.getID())==SUCCESS);
    assert(table.remove(player159.getID())==SUCCESS);
    assert(table.remove(player160.getID())==NOT_FOUND);
    assert(table.remove(player161.getID())==NOT_FOUND);
    assert(table.remove(player162.getID())==NOT_FOUND);
    assert(table.remove(player163.getID())==SUCCESS);
    assert(table.remove(player164.getID())==NOT_FOUND);
    assert(table.remove(player165.getID())==NOT_FOUND);
    assert(table.remove(player166.getID())==NOT_FOUND);
    assert(table.remove(player167.getID())==NOT_FOUND);
    assert(table.remove(player168.getID())==NOT_FOUND);
    assert(table.remove(player169.getID())==NOT_FOUND);
    assert(table.remove(player170.getID())==NOT_FOUND);
    assert(table.remove(player171.getID())==NOT_FOUND);
    assert(table.remove(player172.getID())==NOT_FOUND);
    assert(table.remove(player173.getID())==SUCCESS);
    assert(table.remove(player174.getID())==NOT_FOUND);
    assert(table.remove(player175.getID())==NOT_FOUND);
    assert(table.remove(player176.getID())==SUCCESS);
    assert(table.remove(player177.getID())==NOT_FOUND);
    assert(table.remove(player178.getID())==NOT_FOUND);
    assert(table.remove(player179.getID())==SUCCESS);
    assert(table.remove(player180.getID())==NOT_FOUND);
    assert(table.remove(player181.getID())==NOT_FOUND);
    assert(table.remove(player182.getID())==NOT_FOUND);
    assert(table.remove(player183.getID())==NOT_FOUND);
    assert(table.remove(player184.getID())==NOT_FOUND);
    assert(table.remove(player185.getID())==NOT_FOUND);
    assert(table.remove(player186.getID())==NOT_FOUND);
    assert(table.remove(player187.getID())==NOT_FOUND);
    assert(table.remove(player188.getID())==NOT_FOUND);
    assert(table.remove(player189.getID())==SUCCESS);
    assert(table.remove(player190.getID())==NOT_FOUND);
    assert(table.remove(player191.getID())==NOT_FOUND);
    assert(table.remove(player192.getID())==NOT_FOUND);
    assert(table.remove(player193.getID())==NOT_FOUND);
    assert(table.remove(player194.getID())==NOT_FOUND);
    assert(table.remove(player195.getID())==NOT_FOUND);
    assert(table.remove(player196.getID())==NOT_FOUND);
    assert(table.remove(player197.getID())==SUCCESS);
    assert(table.remove(player198.getID())==SUCCESS);
    assert(table.remove(player199.getID())==NOT_FOUND);
    assert(table.remove(player200.getID())==NOT_FOUND);
    assert(table.remove(player201.getID())==SUCCESS);
    assert(table.remove(player202.getID())==NOT_FOUND);
    assert(table.remove(player203.getID())==SUCCESS);
    assert(table.remove(player204.getID())==SUCCESS);
    assert(table.remove(player205.getID())==NOT_FOUND);
    assert(table.remove(player206.getID())==SUCCESS);
    assert(table.remove(player207.getID())==NOT_FOUND);
    assert(table.remove(player208.getID())==SUCCESS);
    assert(table.remove(player209.getID())==SUCCESS);
    assert(table.remove(player210.getID())==NOT_FOUND);
    assert(table.remove(player211.getID())==NOT_FOUND);
    assert(table.remove(player212.getID())==NOT_FOUND);
    assert(table.remove(player213.getID())==NOT_FOUND);
    assert(table.remove(player214.getID())==NOT_FOUND);
    assert(table.remove(player215.getID())==NOT_FOUND);
    assert(table.remove(player216.getID())==NOT_FOUND);
    assert(table.remove(player217.getID())==NOT_FOUND);
    assert(table.remove(player218.getID())==NOT_FOUND);
    assert(table.remove(player219.getID())==NOT_FOUND);
    assert(table.remove(player220.getID())==NOT_FOUND);
    assert(table.remove(player221.getID())==NOT_FOUND);
    assert(table.remove(player222.getID())==NOT_FOUND);
    assert(table.remove(player223.getID())==NOT_FOUND);
    assert(table.remove(player224.getID())==NOT_FOUND);
    assert(table.remove(player225.getID())==NOT_FOUND);
    assert(table.remove(player226.getID())==NOT_FOUND);
    assert(table.remove(player227.getID())==NOT_FOUND);
    assert(table.remove(player228.getID())==SUCCESS);
    assert(table.remove(player229.getID())==NOT_FOUND);
    assert(table.remove(player230.getID())==NOT_FOUND);
    assert(table.remove(player231.getID())==NOT_FOUND);
    assert(table.remove(player232.getID())==NOT_FOUND);
    assert(table.remove(player233.getID())==NOT_FOUND);
    assert(table.remove(player234.getID())==NOT_FOUND);
    assert(table.remove(player235.getID())==NOT_FOUND);
    assert(table.remove(player236.getID())==NOT_FOUND);
    assert(table.remove(player237.getID())==NOT_FOUND);
    assert(table.remove(player238.getID())==SUCCESS);
    assert(table.remove(player239.getID())==NOT_FOUND);
    assert(table.remove(player240.getID())==NOT_FOUND);
    assert(table.remove(player241.getID())==NOT_FOUND);
    assert(table.remove(player242.getID())==NOT_FOUND);
    assert(table.remove(player243.getID())==NOT_FOUND);
    assert(table.remove(player244.getID())==NOT_FOUND);
    assert(table.remove(player245.getID())==NOT_FOUND);
    assert(table.remove(player246.getID())==NOT_FOUND);
    assert(table.remove(player247.getID())==NOT_FOUND);
    assert(table.remove(player248.getID())==SUCCESS);
    assert(table.remove(player249.getID())==SUCCESS);
    assert(table.remove(player250.getID())==NOT_FOUND);
    assert(table.remove(player251.getID())==NOT_FOUND);
    assert(table.remove(player252.getID())==NOT_FOUND);
    assert(table.remove(player253.getID())==NOT_FOUND);
    assert(table.remove(player254.getID())==SUCCESS);
    assert(table.remove(player255.getID())==NOT_FOUND);
    assert(table.remove(player256.getID())==NOT_FOUND);
    assert(table.remove(player257.getID())==NOT_FOUND);
    assert(table.remove(player258.getID())==SUCCESS);
    assert(table.remove(player259.getID())==NOT_FOUND);
    assert(table.remove(player260.getID())==SUCCESS);
    assert(table.remove(player261.getID())==NOT_FOUND);
    assert(table.remove(player262.getID())==SUCCESS);
    assert(table.remove(player263.getID())==SUCCESS);
    assert(table.remove(player264.getID())==NOT_FOUND);
    assert(table.remove(player265.getID())==NOT_FOUND);
    assert(table.remove(player266.getID())==NOT_FOUND);
    assert(table.remove(player267.getID())==SUCCESS);
    assert(table.remove(player268.getID())==NOT_FOUND);
    assert(table.remove(player269.getID())==NOT_FOUND);
    assert(table.remove(player270.getID())==NOT_FOUND);
    assert(table.remove(player271.getID())==NOT_FOUND);
    assert(table.remove(player272.getID())==SUCCESS);
    assert(table.remove(player273.getID())==SUCCESS);
    assert(table.remove(player274.getID())==NOT_FOUND);
    assert(table.remove(player275.getID())==NOT_FOUND);
    assert(table.remove(player276.getID())==NOT_FOUND);
    assert(table.remove(player277.getID())==NOT_FOUND);
    assert(table.remove(player278.getID())==NOT_FOUND);
    assert(table.remove(player279.getID())==NOT_FOUND);
    assert(table.remove(player280.getID())==NOT_FOUND);
    assert(table.remove(player281.getID())==NOT_FOUND);
    assert(table.remove(player282.getID())==NOT_FOUND);
    assert(table.remove(player283.getID())==NOT_FOUND);
    assert(table.remove(player284.getID())==NOT_FOUND);
    assert(table.remove(player285.getID())==SUCCESS);
    assert(table.remove(player286.getID())==NOT_FOUND);
    assert(table.remove(player287.getID())==NOT_FOUND);
    assert(table.remove(player288.getID())==SUCCESS);
    assert(table.remove(player289.getID())==SUCCESS);
    assert(table.remove(player290.getID())==NOT_FOUND);
    assert(table.remove(player291.getID())==NOT_FOUND);
    assert(table.remove(player292.getID())==NOT_FOUND);
    assert(table.remove(player293.getID())==NOT_FOUND);
    assert(table.remove(player294.getID())==NOT_FOUND);
    assert(table.remove(player295.getID())==SUCCESS);
    assert(table.remove(player296.getID())==NOT_FOUND);
    assert(table.remove(player297.getID())==NOT_FOUND);
    assert(table.remove(player298.getID())==NOT_FOUND);
    assert(table.remove(player299.getID())==NOT_FOUND);
    assert(table.remove(player300.getID())==NOT_FOUND);